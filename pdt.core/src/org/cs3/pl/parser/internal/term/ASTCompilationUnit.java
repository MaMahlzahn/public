/* Generated By:JJTree: Do not edit this line. ASTCompilationUnit.java */

package org.cs3.pl.parser.internal.term;

public class ASTCompilationUnit extends SimpleNode {

	private String filename;
	public String moduleName;
	public ASTCompilationUnit(int id) {
		super(id);
	}

	public ASTCompilationUnit(PrologTermParser p, int id) {
		super(p, id);
	}

	/** Accept the visitor. * */
	public Object jjtAccept(PrologTermParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}
	
	public String getModuleName(){
		if(moduleName==null){
			return "user";
		}
		return moduleName;
	}

	protected void synthesizeImage(StringBuffer sb) {
		for (int i = 0;children!=null&& i < children.length; i++) {
			SimpleNode c = (SimpleNode) children[i];
			if(i>0){
				sb.append("\n");
			}
			c.synthesizeImage(sb);						
		}
		
	}

	public SimpleNode createShallowCopy() {
		ASTCompilationUnit copy = new ASTCompilationUnit(parser,id);
		copy.copy=true;
		copy.setFilename(this.getFileName());		
		return copy;
	}

	private String getFileName() {
		// TODO Auto-generated method stub
		return null;
	}

	public void setFilename(String filename) {
		this.filename = filename;
	}

	public String getFilename() {
		return filename;
	}
}
