option all, alte Implementierung, mit libary, sortiert
ansi_term:ansi_format(*,+,:).
ansi_term:ansi_format(+,*,+,:).
apply:exclude_(*,1,*).
apply:foldl_(*,*,*,*,6,?,*).
apply:foldl_(*,*,*,5,?,*).
apply:foldl_(*,*,4,?,*).
apply:foldl_(*,3,?,*).
apply:include_(*,1,*).
apply:maplist_(*,*,*,*,4).
apply:maplist_(*,*,*,3).
apply:maplist_(*,*,2).
apply:maplist_(*,1).
apply:partition_(*,*,2,*,*,*,*).
apply:partition_(*,1,*,*).
apply:partition_(*,2,*,*,*).
apply:scanl_(*,*,*,*,6,?,*).
apply:scanl_(*,*,*,5,?,*).
apply:scanl_(*,*,4,?,*).
apply:scanl_(*,3,?,*).
assoc:map_assoc_(*,1).
assoc:map_assoc_(*,2,*).
backward_compatibility:sformat(*,+,:).
'c2c.tree_expansion':expand_id_to_node(*,*,*,0,*).
charsio:format_to_chars(+,:,*).
charsio:format_to_chars(+,:,*,*).
charsio:with_stream(*,0).
consult_server:all_solutions(*,0,*).
consult_server:call_save(*,0).
consult_server:iterate_solutions(*,+,0,*).
consult_server:my_format(+,:).
consult_server:my_format(+,+,:).
consult_server:one_solution(*,0,*).
consult_server:solutions_until_cut(*,0,*).
consult_server:solutions_weak_until_cut(*,0,*).
consult_server:with_interrupts(*,0).
ctc_lists:aformat(*,+,:).
ctc_lists:traverseList(*,*,0).
ctc_testframework:ctc_assert_true(*,0).
ctc_testframework:ctc_assert_true(0).
ctc_testframework:ctc_assert_true_conjunction(*,0).
ctc_testframework:ctc_assert_true_conjunction(0).
ctc_testframework:ctc_assert_true_predicate(*,:).
ctc_testframework:ctc_assert_true_predicate(:).
ctc_testframework:tryit(:).
ctc_util_files:consult_if_not_yet(:,:).
ctc_util_files:export_all_results(*,0).
ctc_util_files:export_goal_output(*,0).
ctc_util_files:predicate_loaded_from(:,*).
ctc_util_files:report_to_file(*,0).
ctc_util_files:report_to_file_ctc(0).
ctc_util_files:report_to_file_in_ctchome(0).
ctc_util_files:report_to_file_in_ctchome(0,*).
ctc_util_files:with_input_from(*,0).
ctc_util_files:with_output_to_file(*,*,0).
ctc_util_files:with_output_to_file(*,0).
ctc_util_files:with_output_to_folder(*,*,0).
ctc_util_files:with_output_to_folder(*,0).
database_cache:generate_all_in_module(*,*,0).
database_cache:generate_all_in_module(*,*,0,*).
database_cache:generate_in_module(*,*,0).
database_cache:generate_in_module(*,*,0,*).
dcg_basics:float(:,*,*).
dcg_basics:number(:,*,*).
emacs_frame:make_emacs_tab_popup(:).
emacs_language_mode:find_file_header(*,:).
emacs_prolog_mode:do_n_times(*,+,:,+,*).
emacs_prolog_mode:do_spy(*,*,:).
emacs_prolog_mode:do_trace(*,*,:).
emacs_prolog_mode:head_property(:,*).
emacs_prolog_mode:hidden_property(*,:).
emacs_prolog_mode:make_prolog_mode_class_popup(:).
emacs_prolog_mode:make_prolog_mode_file_popup(:).
emacs_prolog_mode:make_prolog_mode_goal_popup(:).
emacs_prolog_mode:make_prolog_mode_head_popup(:).
emacs_prolog_mode:make_prolog_mode_module_popup(:).
emacs_tags:complete_from_tag_string(*,+,1).
find_reference:ref2id(*,0).
gui_tracer:trace_goal_2(0).
http_dispatch:action(1,*,*).
http_dispatch:call_action(1,*,*).
http_dispatch:call_action(1,?).
http_dispatch:spawn_action(1,*,*).
http_dispatch:time_limit_action(1,*,*).
http_header:parameters_and_quality(*,:,*,*,*).
http_parameters:fill_parameter(*,*,2).
http_parameters:fill_parameters(*,*,2).
http_parameters:http_parms(*,*,2,*).
httpd_wrapper:call_handler(:,*,*).
httpd_wrapper:handler_with_output_to(:,*,*,*,?).
httpd_wrapper:http_wrap_spawned(:,*,*).
java_modifications:deterministic_call_reporting_failure_or_exception(0).
man_util:apropos_class_attribute(+,:,*,*,*).
metafile_referencer:file_references_for_call(0,*,*).
pairs:map_list_to_pairs2(*,2,*).
pce_config:config_attribute(:,*).
pce_config:config_attributes_to_term(:,+,*).
pce_config:config_object_to_term(:,?).
pce_config:config_term_to_object(:,:).
pce_config:config_term_to_object(:,:,:).
pce_config:lasserta(:).
pce_config:load_config_key(:,*).
pce_config:lretract(:).
pce_config:pce_object_type(:).
pce_config:prolog_value_argument(+,:,*).
pce_config:save_config_key(+,:).
pce_config:set_config_(*,*,:).
pce_config:set_config_term(*,*,:,:).
pce_config:term_description(:,*).
pce_config:term_description(:,*,*).
pce_principal:get_implementation(*,*,+,:).
pce_principal:send(+,:,*,*,*,*,*,*).
pce_prolog_clause:predicate_classification(:,*).
pce_prolog_tracer:flevel(*,:).
pce_prolog_tracer:run_in_debug_thread(0,*,*,*).
pce_realise:attach_class_variable(*,:).
pce_realise:call_binder(?,?,2).
pce_require:message(+,:).
pce_require:output(+,:).
pce_type:pce_define_type(*,:).
pce_util:chain_list(:,*).
pce_util:to_object(:,?).
pdt_xref:find_unique(^).
pef_inspect:relation_of_node(*,0,*).
pldoc_html:argname(:,?,?).
pldoc_html:documented_pi(*,:).
pldoc_html:html_tokens_for_predicates(:,*,*,*).
pldoc_html:include(:,*,*,*,*).
pldoc_html:more_doc(:,*).
pldoc_html:object(:,*,*,*,*,*).
pldoc_html:object(:,?,*,*,*,*,?).
pldoc_html:object_page(:,*,?,?).
pldoc_html:object_synopsis(:,*,*,*).
pldoc_html:pred_arg(:,*,?,?).
pldoc_html:pred_dom(:,*,*,*).
pldoc_html:predref(:,*,*).
pldoc_html:predref(:,*,*,*).
pldoc_http:browser_url(:,*).
pldoc_http:doc_browser(:).
pldoc_index:object_summary(:,*,*,*,*).
pldoc_library:load_all(:).
pldoc_man:dom(:,*,?,?).
pldoc_man:dom_element(*,*,:,+,*,*).
pldoc_man:man_synopsis(:,*,*,*).
pldoc_man:man_synopsis_2(:,*,*,*).
pldoc_modes:mode(:,*).
pldoc_process:doc_comment(:,*,*,*).
pldoc_process:locally_defined(:).
pldoc_search:category_title(:,?,?).
plunit:assert_cyclic(:).
plunit:assertion_goal(*,:,*,*).
plunit:call_det(0,*).
plunit:cmp_list(*,*,2).
plunit:unqualify(:,*,*).
plunit:verify_options(*,1).
predicate_options:check_option(:,?,?,*,*).
predicate_options:check_option_list(*,:,?,*,*,*).
predicate_options:check_options(:,?,*,*,*).
predicate_options:current_predicate_option_decl(:,?,*).
predicate_options:option_decl(:,*).
predicate_options:pred_option(:,*,*).
prolog:doc_object_summary(:,*,*,*).
prolog:predicate_summary(:,*).
prolog_codewalk:undefined(:,*,*).
prolog_codewalk:walk_called_by_pred(:,*).
prolog_colour:colourise_body(:,*,*).
prolog_colour:colourise_body(:,*,*,*).
prolog_colour:colourise_db(:,*,*).
prolog_colour:colourise_directive(:,*,*).
prolog_colour:colourise_goal(:,*,*,*).
prolog_colour:colourise_goals(:,*,*,*).
prolog_colour:colourise_list_args(*,*,:,*,*).
prolog_colour:colourise_meta_arg(*,:,*,*).
prolog_colour:colourise_method_body(:,*,*).
prolog_colour:colourise_option(:,*,*,*).
prolog_colour:colourise_option_list(:,*,*,*,*).
prolog_colour:colourise_prolog_flag_name(:,*,*).
prolog_colour:colourise_setof(:,*,*).
prolog_colour:colourise_term(:,*,*).
prolog_colour:colourise_term(:,*,*,*).
prolog_colour:colourise_term_arg(:,*,*).
prolog_colour:goal_classification(*,:,*,*).
prolog_colour:goal_classification(:,*).
prolog_colour:safe_push_op(+,+,:,*).
prolog_colour:specified_item(*,:,*,*).
prolog_colour:specified_list(*,:,*,*,*).
prolog_edit:edit(:).
prolog_edit:edit_no_trace(:).
prolog_edit:locate(:,*).
prolog_edit:locate(:,:,*).
prolog_explain:explain(:).
prolog_explain:explain(:,*).
prolog_explain:explain_predicate(:,*).
prolog_explain:known_predicate(:).
prolog_explain:utter(*,+,:).
prolog_gui:get_tracer(*,:,-).
prolog_gui:get_tracer(:,-).
prolog_gui:make_prolog_binding_popup(:).
prolog_gui:prolog_frame_attribute(+,+,+,:).
prolog_gui:run_pce(0,*,*,*).
prolog_gui:send_if_tracer(*,:).
prolog_gui:send_if_tracer(:).
prolog_gui:send_tracer(*,:).
prolog_gui:send_tracer(:).
prolog_ide_stack:frame_level(*,:).
prolog_ide_stack:prolog_parent(+,:,:).
prolog_listing:declaration(:,*,*).
prolog_listing:list_clauses(:,*).
prolog_listing:list_declarations(:,*).
prolog_listing:list_predicate(:,*).
prolog_predicate:pi_property(:,?).
prolog_predicate:summary(:,*).
prolog_term_view:emit_term(+,:).
prolog_trace_utils:list_predicate(:).
prolog_trace_utils:tag_module(:).
prolog_xref:process_predicate_comma(?,2,?).
prolog_xref:process_predicate_list(*,2,?).
prolog_xref:xref_push_op(*,+,+,:).
properties:add_properties_to_list(:,*,*,*,*).
properties:entity_property(:,*,*).
properties:get_property_list(:,*,*,*).
properties:look_for_kind_and_property(:,*,?).
rbtrees:apply(*,*,2,*).
rbtrees:partial_map(*,*,*,*,2,*).
record:clean_body(*,:).
regression:equiv(0,0,*).
regression:regression_test(0,0,0,*).
regression:report_if_not_zero(0,*,*,*).
regression_simple:equiv(0,0).
regression_simple:regressionTest(0,0).
settings:eval_default(:,*,*,-).
settings:setting_property(*,*,*,:,*,*).
settings:to_atom(:,*).
sort:predmerge(*,3,*,*,*,*,*).
sort:predmerge(3,*,*,*).
sort:predsort(3,*,*,*,*).
swi_ide:prolog_ide(:).
swi_option:meta_option(*,1,*,*).
swi_option:meta_options(*,1,*,*).
thread_httpd:http_process(0,+,+,*).
thread_httpd:wrap_spawned(*,:).
thread_util:tspy(:).
thread_util:tspy(:,*).
time:run_alarm_goal(*,0).
user:add(:).
user:add1(0).
user:all(0).
user:assert_and_track_rollback_info(:).
user:assert_fail(*,0).
user:assert_fail(0).
user:assert_logging(:).
user:assert_true(*,0).
user:assert_true(0).
user:assert_unique(:).
user:assert_unique_fact(:).
user:assert_unique_ground_fact(:).
user:assert1T(:).
user:ast_node_for_id(*,*,0).
user:ast_relation_for_id(*,*,*,0).
user:built_in(:).
user:consult_silent(:).
user:consult_silent_if_logging_disabled(:).
user:count(0).
user:count(0,*).
user:count_all_and_unique(0,*,*).
user:count_and_print(0,*).
user:count_facts(:,*).
user:count_unique(0,*,*).
user:ctc_error(*,:).
user:ctc_info(*,:).
user:ctc_time(0,*).
user:ctc_warning(*,:).
user:delete(:).
user:do_if_logging_enabled(0).
user:do_with_logging_disabled(0).
user:do_with_logging_enabled(0).
user:error_handling(0,*,*).
user:error_handling_add_error_term(*,0,*).
user:find_ast_node_for_id(*,0,*).
user:find_ref_to_decl(*,0,*).
user:find_reference_to_id(*,0,*).
user:format_append_to_log(+,:).
user:generate_synthetic_methods(0).
user:get_term(*,0).
user:getTerm(*,0).
user:has_property(:,?,*).
user:listing_if_defined(:).
user:log(+,+,:).
user:log_on_stdout(+,:).
user:log_once_to_file(*,0).
user:mapGoalAlwaysSucceed(1,*).
user:mapGoalMayFail(1,*).
user:my_call_cleanup(0,0).
user:performance(0,*,*).
user:performanceUnique(0,*,*,*).
user:printf(+,:).
user:printfa(+,:).
user:prolog_iteration_via_backtracking(0).
user:repeat_n_times(0,*).
user:repeat_n_times_loop(0,*).
user:replace(:).
user:replace(:,:).
user:retract_and_track_rollback_info(:).
user:retract_tree(:).
user:retractT(:).
user:silent(0).
user:t_i(*,0).
user:throw_exception_upon_failure(0,*).
user:verbose(0).
user:walk_relation_type(1,0).
user:walk_relations(*,1,*).
user:walk_tree_include_relations_and_derived(*,1,*).
user:write_on_stdout(+,:).
www_browser:netscape_remote(*,+,:).
% Found new meta-predicates in iteration 1 (1.591 sec)
% Found new meta-predicates in iteration 2 (1.435 sec)
% Found new meta-predicates in iteration 3 (1.435 sec)
% Found new meta-predicates in iteration 4 (1.466 sec)
% Found new meta-predicates in iteration 5 (1.466 sec)
% Found new meta-predicates in iteration 6 (1.498 sec)
% Found new meta-predicates in iteration 7 (1.498 sec)
% Restarting analysis ...
% Restarting analysis ...
% Restarting analysis ...
% Restarting analysis ...
% Restarting analysis ...
% Restarting analysis ...
% Restarting analysis ...
4 ?- 
prolog_walk_code([trace_reference(_:member(_,_)), on_trace(pdt_xref:assert_result)]).
true.

