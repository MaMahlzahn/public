package org.cs3.jlmp.internal.astvisitor;

import java.util.Map;
import java.util.TreeMap;

import org.cs3.pl.common.Debug;

/**
 * Implements the FQNManager interface, translating fqn(...) terms to
 * local IDs. local2FQN facts are generated by getFQNMapping.
 *  
 * @author schulzs1
 * @inheritDoc
 */
public class LocalIDFQNTranslator implements FQNTranslator {

	Map fqnToIDTable = new TreeMap();
	private IIDGenerator provider;
	
	/**
	 * constructs a new LocalIDFQNManager. The IIDProvider passed will 
	 * be used to generate IDs once new IDs become necessary 
	 * @param resolver
	 */
	
	public LocalIDFQNTranslator(LocalIDGenerator provider){
		this.provider = provider;
	}
	
	public Map getFQNMapping() {
		
			return fqnToIDTable;
		
	}

	public String transformFQN(String string) {
		
		synchronized (fqnToIDTable){
			if (!fqnToIDTable.containsKey(string)){
			    if(string.indexOf("Subroutine")>-1){
			        Debug.debug("debug");
			    }
				fqnToIDTable.put(string, provider.getID());
			}
			return (String) fqnToIDTable.get(string);
		}
	}
}
