<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.cs3.pdt">
<annotation>
      <appInfo>
         <meta.schema plugin="org.cs3.pdt" id="hooks" name="Lifecycle Hooks"/>
      </appInfo>
      <documentation>
         Define code hooks that should be executed on certain points during the lifecycle of the PrologInterface.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="hook" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="hook">
      <complexType>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  fully qualified class name of a class implementing the org.cs3.pl.prolog.LifeCycleHook interface.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.cs3.pl.extension.IJTransformerObserver"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="dependsOn" type="string">
            <annotation>
               <documentation>
                  A comma-separated list of hook ids this hook code depends on. E.g. in start-up situation, the hooks specified here will be executed before this hook. (vice versa for shutdown)
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  Any string that is unique can serve as an identifier for a hook.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

</schema>
