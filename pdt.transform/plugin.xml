<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension-point id="prologRefactorings" name="Prolog Refactorings" schema="schema/prologRefactorings.exsd"/>

   <extension point="org.eclipse.ui.popupMenus">
    <!-- put a context menu item into the menu of standard text editors.
         If the properties editor had an own context menu id, we could
         target this more specifically. This way, we must have the
         refactoring itself decide whether the operation can run.
      -->
    <viewerContribution targetID="org.cs3.pdt.internal.editors.PLEditor" 
                        id="org.cs3.pdt.transform.apply_transformation">
      <action label="Apply Transformation"
              class="org.cs3.pdt.actions.ApplyTransformation" 
              menubarPath="additions"
              id="org.cs3.pdt.actions.apply_transformation"/>
	<action label="Rename File"
              class="org.cs3.pdt.transform.internal.RenameFile" 
              menubarPath="additions"
              id="org.cs3.pdt.actions.rename_file"/>              
    </viewerContribution>
  </extension>
   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="popup:org.eclipse.ui.popup.any">
         <menu
               id="prologRefactoringsMenu"
               label="Refactorings">
            <command
                  commandId="pdt.transform.executeRefactoring"
                  id="unfug"
                  label="No Command">
            </command>
         </menu>
      </menuContribution>
   </extension>
   <extension
         point="org.eclipse.ui.commands">
      <command
            defaultHandler="org.cs3.pdt.transform.handlers.ExecuteRefactoringHandler"
            id="pdt.transform.executeRefactoring"
            name="Execute Refactoring">
         <commandParameter
               id="pdt.transform.executeRefactoring.refactoring"
               name="Refactoring"
               optional="true"
               values="org.cs3.pdt.transform.handlers.ExecuteRefactoringParameterValues">
         </commandParameter>
      </command>
   </extension>
</plugin>
