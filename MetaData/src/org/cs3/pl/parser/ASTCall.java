/* Generated By:JJTree: Do not edit this line. ASTCall.java */

package org.cs3.pl.parser;

public class ASTCall extends SimpleNode implements ASTUnitMember {
	private boolean init;
	private Token endToken;

	public ASTCall(int id) {
		super(id);
	}
	
	public ASTCall(PrologParser p, int id) {
		super(p, id);
	}
	
	
	/** Accept the visitor. **/
	public Object jjtAccept(PrologParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}
	
	/**
	 * @return
	 */
	public boolean isModuleDeclaration() {
		if(children[0] instanceof ASTCompound)
			return ((ASTFunctor)children[0].jjtGetChild(0)).getName().equals("module");
		return false;
	}

	/**
	 * @return
	 */
	public String getModuleName() {
		return ((ASTIdentifier)children[0].jjtGetChild(1).jjtGetChild(0)).getName();
	}

	/**
	 * @return
	 */
	public ASTList getPublicModuleInterface() {
		return (ASTList)children[0].jjtGetChild(1).jjtGetChild(1);
	}	
	/**
	 * @param b
	 */
	public void setInitialization(boolean b) {
		init = b;
		
	}
	/**
	 * @return Returns the init.
	 */
	public boolean isInitialisation() {
		return init;
	}
	
	/* (non-Javadoc)
	 * @see org.cs3.pl.parser.ASTUnitMember#setEndToken(org.cs3.pl.parser.Token)
	 */
	public void setEndToken(Token token) {
		endToken = token;
		
	}

	/* (non-Javadoc)
	 * @see org.cs3.pl.parser.ASTUnitMember#getEndToken(org.cs3.pl.parser.Token)
	 */
	public Token getEndToken() {
		return endToken;
	}
}
