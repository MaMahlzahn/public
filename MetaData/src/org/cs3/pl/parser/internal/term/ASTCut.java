/* Generated By:JJTree: Do not edit this line. ASTCut.java */

package org.cs3.pl.parser.internal.term;

public class ASTCut extends SimpleNode implements Atomic {
	public ASTCut(int id) {
		super(id);
	}

	public ASTCut(PrologTermParser p, int id) {
		super(p, id);
	}

	/** Accept the visitor. * */
	public Object jjtAccept(PrologTermParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	public String toString() {
		return super.toString() + " (" + getImage() + ")";
	}

	protected void synthesizeImage(StringBuffer sb) {
		sb.append(";");

	}

	public SimpleNode createShallowCopy() {
		ASTCut copy = new ASTCut(parser,id);
		copy.copy=true;
		return copy;
	}
	public int getArity() {
		return 0;
	
	}
	public String getLabel(){
		return ";";
	}
}
