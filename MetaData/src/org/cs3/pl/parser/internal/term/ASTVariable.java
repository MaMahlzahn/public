/* Generated By:JJTree: Do not edit this line. ASTVariable.java */

package org.cs3.pl.parser.internal.term;

public class ASTVariable extends SimpleNode {
  private String value;

public ASTVariable(int id) {
    super(id);
  }

  public ASTVariable(PrologTermParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(PrologTermParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  public String toString() {
		return super.toString() + " ("+getImage()+")";
	}
  protected void synthesizeImage(StringBuffer sb) {
		sb.append(getValue());

	}

	private String getValue() {
		if (value == null) {
			value = getImage();
		}
		return value;
	}

	public SimpleNode createShallowCopy() {
		ASTVariable copy = new ASTVariable(parser, id);
		copy.copy = true;
		copy.value = getValue();
		return copy;
	}
	
	public String getLabel() {	
		return getValue();
	}
	
	public int getArity(){
		return 0;
	}
}
