/* Generated By:JJTree: Do not edit this line. ASTIdentifier.java */

package org.cs3.pl.parser.internal.term;

public class ASTIdentifier extends SimpleNode {
	protected String value;

	public ASTIdentifier(int id) {
		super(id);
	}

	public ASTIdentifier(PrologTermParser p, int id) {
		super(p, id);
	}

	/** Accept the visitor. * */
	public Object jjtAccept(PrologTermParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	public String toString() {
		return super.toString() + " (" + getImage() + ")";
	}

	protected void synthesizeImage(StringBuffer sb) {
		sb.append(getValue());

	}

	private String getValue() {
		if (value == null) {
			value = getImage();
			if(value.startsWith("'")){
				value=value.substring(1,value.length()-1);
			}
		}
		return value;
	}

	public SimpleNode createShallowCopy() {
		ASTIdentifier copy = new ASTIdentifier(parser, id);
		copy.copy = true;
		copy.value = getValue();
		return copy;
	}
	
	public int getArity() {
		return 0;
	
	}
	public String getLabel(){
		return getValue();
	}
}
