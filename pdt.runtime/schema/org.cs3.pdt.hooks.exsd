<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.cs3.pdt.runtime">
<annotation>
      <appInfo>
         <meta.schema plugin="org.cs3.pdt.runtime" id="hooks" name="Lifecycle Hooks"/>
      </appInfo>
      <documentation>
         Define code hooks that should be executed on certain points during the lifecycle of the PrologInterface.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element deprecated="true"/>
         </appInfo>
         <documentation>
            Deprecated since 0.2M4. 
Reason: 
The connection between a particular pif and a particular set of tasks that is performed on this pif should after all be configurable by the user wherever possible. Hooks are logically connected to such a set of tasks. So they should be registered dynamically using java api and not to a static pif key using the xml file.
         </documentation>
      </annotation>
      <complexType>
         <choice minOccurs="0" maxOccurs="unbounded">
            <element ref="hook"/>
            <element ref="regestryHook"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="hook">
      <complexType>
         <choice minOccurs="0" maxOccurs="unbounded">
            <element ref="tag"/>
            <element ref="consult"/>
            <element ref="libraryDependency"/>
            <element ref="hookDependency"/>
         </choice>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  fully qualified class name of a class implementing the org.cs3.pl.prolog.LifeCycleHook interface.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.cs3.pl.LifeCycleHook"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="dependsOn" type="string">
            <annotation>
               <documentation>
                  A comma-separated list of hook ids this hook code depends on. E.g. in start-up situation, the hooks specified here will be executed before this hook. (vice versa for shutdown)

Use of this attribute is deprecated, please use the hookDependency element instead.
               </documentation>
               <appInfo>
                  <meta.attribute deprecated="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  Any string that is unique can serve as an identifier for a hook.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="key" type="string">
            <annotation>
               <documentation>
                  An optional key identifying a PrologInterface instance created by the PDT.&lt;p&gt;
This hook will be registered with all PIF instance that are created using the &lt;code&gt; org.cs3.pdt.PDTPlugin.getPrologInterface(String key)&lt;/code&gt; method with a matching &lt;code&gt;key&lt;/code&gt; argument. If this attribute is ommited, the hook is registered with every PIF created by the PDT.

Use of this attribute is deprecated, please use tag elements instead.
               </documentation>
               <appInfo>
                  <meta.attribute deprecated="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="tag">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="consult">
      <complexType>
         <attribute name="resource" type="string" use="required">
            <annotation>
               <documentation>
                  the resource that should be consulted.
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="libraryDependency">
      <complexType>
         <attribute name="library" type="string" use="required">
            <annotation>
               <documentation>
                  The identifier of a a library element. 
See Extension Point org.cs3.pdt.runtime.prologLibrary.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="hookDependency">
      <complexType>
         <attribute name="hook" type="string" use="required">
            <annotation>
               <documentation>
                  The id of another hook.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="regestryHook">
      <complexType>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.cs3.pdt.runtime.RegistryHook"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

</schema>
